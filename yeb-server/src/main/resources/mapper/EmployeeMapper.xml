<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.server.mapper.EmployeeMapper">

    <!-- 通用查询映射结果 -->
    <resultMap id="BaseResultMap" type="com.example.server.entity.Employee">
        <id column="id" property="id"/>
        <result column="name" property="name"/>
        <result column="gender" property="gender"/>
        <result column="birthday" property="birthday"/>
        <result column="idCard" property="idCard"/>
        <result column="wedlock" property="wedlock"/>
        <result column="nationId" property="nationId"/>
        <result column="nativePlace" property="nativePlace"/>
        <result column="politicId" property="politicId"/>
        <result column="email" property="email"/>
        <result column="phone" property="phone"/>
        <result column="address" property="address"/>
        <result column="departmentId" property="departmentId"/>
        <result column="jobLevelId" property="jobLevelId"/>
        <result column="posId" property="posId"/>
        <result column="engageForm" property="engageForm"/>
        <result column="tiptopDegree" property="tiptopDegree"/>
        <result column="specialty" property="specialty"/>
        <result column="school" property="school"/>
        <result column="beginDate" property="beginDate"/>
        <result column="workState" property="workState"/>
        <result column="workId" property="workId"/>
        <result column="contractTerm" property="contractTerm"/>
        <result column="conversionTime" property="conversionTime"/>
        <result column="notWorkDate" property="notWorkDate"/>
        <result column="beginContract" property="beginContract"/>
        <result column="endContract" property="endContract"/>
        <result column="workAge" property="workAge"/>
        <result column="salaryId" property="salaryId"/>
    </resultMap>
    <resultMap id="EmployeeInfo" type="com.example.server.entity.Employee" extends="BaseResultMap">
        <association property="nation" javaType="com.example.server.entity.Nation">
            <id column="nId" property="id"></id>
            <result column="nName" property="name"></result>
        </association>
        <association property="politicsStatus" javaType="com.example.server.entity.PoliticsStatus">
            <id column="psId" property="id"></id>
            <result column="psName" property="name"></result>
        </association>
        <association property="department" javaType="com.example.server.entity.Department">
            <id column="dId" property="id"></id>
            <result column="dName" property="name"></result>
        </association>
        <association property="joblevel" javaType="com.example.server.entity.Joblevel">
            <id column="jId" property="id"></id>
            <result column="jName" property="name"></result>
        </association>
        <association property="position" javaType="com.example.server.entity.Position">
            <id column="pId" property="id"></id>
            <result column="pName" property="name"></result>
        </association>
    </resultMap>
    <resultMap id="EmployeeWithSalary" type="com.example.server.entity.Employee" extends="BaseResultMap">
        <association property="salary" javaType="com.example.server.entity.Salary">
            <id column="sid" property="id"></id>
            <result column="sName" property="name"></result>
            <result column="basicSalary" property="basicSalary"></result>
            <result column="bonus" property="bonus"></result>
            <result column="lunchSalary" property="lunchSalary"></result>
            <result column="trafficSalary" property="trafficSalary"></result>
            <result column="allSalary" property="allSalary"></result>
            <result column="pensionBase" property="pensionBase"></result>
            <result column="pensionPer" property="pensionPer"></result>
            <result column="medicalBase" property="medicalBase"></result>
            <result column="medicalPer" property="medicalPer"></result>
            <result column="accumulationFundBase" property="accumulationFundBase"></result>
            <result column="accumulationFundPer" property="accumulationFundPer"></result>
        </association>
        <association property="department" javaType="com.example.server.entity.Department">
            <result column="dName" property="name"></result>
        </association>
    </resultMap>

    <!-- 通用查询结果列 -->
    <sql id="Base_Column_List">
        id, name, gender, birthday, idCard, wedlock, nationId, nativePlace, politicId, email, phone, address, departmentId, jobLevelId, posId, engageForm, tiptopDegree, specialty, school, beginDate, workState, workId, contractTerm, conversionTime, notWorkDate, beginContract, endContract, workAge, salaryId
    </sql>
    <!--查询员工列表,Mybatis会自动把Page放进来,我们不用在SQL里写LIMIT-->
    <select id="getEmployeeByPage" resultMap="EmployeeInfo">
        SELECT
        e.*, n.id AS nId,
        n.`name` AS nName,
        ps.id AS psId,
        ps.`name` AS psName,
        d.id AS dId,
        d.`name` AS dName,
        j.id AS jId,
        j.`name` AS jName,
        p.id AS pId,
        p.`name` AS pName
        FROM
        t_employee e,
        t_nation n,
        t_politics_status ps,
        t_department d,
        t_joblevel j,
        t_position p
        WHERE
        e.nationId = n.id
        AND e.politicId = ps.id
        AND e.departmentId = d.id
        AND e.jobLevelId = j.id
        AND e.posId = p.id
        <if test="null!=employee.name and ''!=employee.name">
            AND e.`name` LIKE CONCAT('%', #{employee.name}, '%')
        </if>
        <if test="null!=employee.politicId">
            AND e.politicId = #{employee.politicId}
        </if>
        <if test="null!=employee.nation Id">
            AND e.nationId = #{employee.nationId}
        </if>
        <if test="null!=employee.jobLevelId">
            AND e.jobLevelId = #{employee.jobLevelId}
        </if>
        <if test="null!=employee.posId">
            AND e.posId = #{employee.posId}
        </if>
        <if test="null!=employee.engageForm and ''!=employee.engageForm">
            AND e.engageForm = #{employee.engageForm}
        </if>
        <if test="null!=employee.departmentId">
            AND e.departmentId = #{employee.departmentId}
        </if>
        <if test="null!=employee.workId and ''!=employee.workId">
            AND e.workId = #{employee.workId}
        </if>
        <if test="null!=beginDateScope and 2==beginDateScope.length">
            AND e.beginDate BETWEEN #{beginDateScope[0]} AND #{beginDateScope[1]}
        </if>
        ORDER BY
        e.id
    </select>
    <select id="getMaxWorkId" resultType="java.lang.Integer">
        SELECT MAX(workId) FROM t_employee
    </select>

    <!--查询员工-->
    <select id="getEmployee" resultMap="EmployeeInfo">
        SELECT
        e.*, n.id AS nId,
        n.`name` AS nName,
        ps.id AS psId,
        ps.`name` AS psName,
        d.id AS dId,
        d.`name` AS dName,
        j.id AS jId,
        j.`name` AS jName,
        p.id AS pId,
        p.`name` AS pName
        FROM
        t_employee e,
        t_nation n,
        t_politics_status ps,
        t_department d,
        t_joblevel j,
        t_position p
        WHERE
        e.nationId = n.id
        AND e.politicId = ps.id
        AND e.departmentId = d.id
        AND e.jobLevelId = j.id
        AND e.posId = p.id
        <if test="null!=id">
            AND e.id=#{id}
        </if>
        ORDER BY
        e.id
    </select>
    <!--获取所有员工的工资账套-->
    <select id="getEmployeeWithSalary" resultMap="EmployeeWithSalary">
        SELECT
            e.*, d.`name` AS dName,
            s.id AS sId,
            s.`name` AS sName,
            s.basicSalary,
            s.bonus,
            s.lunchSalary,
            s.trafficSalary,
            s.allSalary,
            s.pensionBase,
            s.pensionPer,
            s.medicalBase,
            s.medicalPer,
            s.accumulationFundBase,
            s.accumulationFundPer
        FROM
            `t_employee` e
        LEFT JOIN t_salary s ON e.salaryId = s.id
        LEFT JOIN t_department d ON e.departmentId = d.id
        ORDER BY
            e.id
    </select>

</mapper>
